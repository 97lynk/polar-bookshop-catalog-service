spring:
    lifecycle:
        timeout-per-shutdown-phase: 15s
    application:
        name: catalog-service
    config:
        import: ''
    cloud:
        config:
            enabled: false
            fail-fast: false # In production, set to true
            retry:
                max-attempts: 5
                initial-interval: 1000
                max-interval: 2000
                multiplier: 1.1
            request-connect-timeout: 5000
            request-read-timeout: 5000
            uri: http://localhost:8888
    datasource:
        username: user
        password: password
        url: jdbc:postgresql://localhost:5432/polardb_catalog
        hikari:
            connection-timeout: 2000 #ms
            maximum-pool-size: 5
    #    sql:
    #        init:
    #            mode: always
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:8080/realms/PolarBookshop
server:
    port: 9001
    tomcat:
        connection-timeout: 2s
        keep-alive-timeout: 15s
        threads:
            max: 50
            min-spare: 5
    shutdown: graceful
polar:
    greeting: 'Welcome to the local book catalog!'

management:
    endpoints:
        web:
            exposure:
                include:
                    - configprops
                    - refresh
                    - health
                    - metrics
                    - prometheus
                    - sessions
                    - flyway
                    - info
                    - heapdump
    endpoint:
        health:
            show-components: always
            show-details: always
            probes:
                enabled: true
            group:
                readiness:
                    include:
                        - readinessState
                liveness:
                    include:
                        - livenessState
    metrics:
        tags:
            application: ${spring.application.name}

logging:
    pattern:
        level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    level:
        root: trace